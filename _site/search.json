[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this hands-on exercise, I will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\nto plot statistics error bars by using ggplot2,\nto plot interactive error bars by combining ggplot2, plotly and DT,\nto create advanced by using ggdist, and\nto create hypothetical outcome plots (HOPs) by using ungeviz package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#loading-the-r-packages",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Loading the R packages",
    "text": "Loading the R packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#importing-data",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Importing data",
    "text": "Importing data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Plotting standard error bars of point estimates",
    "text": "Plotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Plotting confidence interval of point estimates",
    "text": "Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\nBelow is the plot of interactive error bars for the 99% confidence interval of mean maths score by race.\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nThis function comes with many arguments. For example, in the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = c(0.95, 0.99),\n                     .point = median,\n                     .interval = qi,\n                     show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\nStep 1: Installing ungeviz package\ndevtools::install_github(\"wilkelab/ungeviz\")\nNote: This step is only needed to be performed once.\nStep 2: Launch the application in R\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on Exercise 4c: Visualising Uncertainty",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "",
    "text": "In this hands-on exercise, I will learn and gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#loading-the-r-packages",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Loading the R packages",
    "text": "Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages: ggstatsplot and tidyverse.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#importing-the-data",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Importing the data",
    "text": "Importing the data\nIn this hands-on exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association.\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#loading-the-r-packages-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#loading-the-r-packages-1",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Loading the R packages",
    "text": "Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages.\n\npacman::p_load(readxl, performance, parameters, see)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#importing-data",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Importing data",
    "text": "Importing data\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Multiple Regression Model using lm()",
    "text": "Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Model Diagnostic: checking for multicolinearity",
    "text": "Model Diagnostic: checking for multicolinearity\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Model Diagnostic: checking normality assumption",
    "text": "Model Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Model Diagnostic: Check model for homogeneity of variances",
    "text": "Model Diagnostic: Check model for homogeneity of variances\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Model Diagnostic: Complete check",
    "text": "Model Diagnostic: Complete check\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Visualising Regression Parameters: see methods",
    "text": "Visualising Regression Parameters: see methods\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "Visualising Regression Parameters: ggcoefstats() methods",
    "text": "Visualising Regression Parameters: ggcoefstats() methods\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "",
    "text": "In this hands-on exercise, I will learn two relatively new statistical graphic methods for visualising distribution, namely ridgeline plot and raincloud plot by using ggplot2 and its extensions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#loading-the-r-packages",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Loading the R packages",
    "text": "Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\ntidyverse, a family of R packages for data science process,\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots, and\nggdist for visualising distribution and uncertainty.\n\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#importing-the-data",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Importing the data",
    "text": "Importing the data\nIn this hands-on exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Plotting ridgeline graph: ggridges method",
    "text": "Plotting ridgeline graph: ggridges method\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#mapping-the-probabilities-directly-onto-colour",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#mapping-the-probabilities-directly-onto-colour",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Mapping the probabilities directly onto colour",
    "text": "Mapping the probabilities directly onto colour\nThe ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Ridgeline plots with quantile lines",
    "text": "Ridgeline plots with quantile lines\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figure below.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-a-half-eye-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-a-half-eye-graph",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Plotting a Half Eye graph",
    "text": "Plotting a Half Eye graph\nFirst, a Half-Eye graph will be plotted by using stat_halfeye() of ggdist package.\nThis produces a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Adding the boxplot with geom_boxplot()",
    "text": "Adding the boxplot with geom_boxplot()\nNext, we will add the second geometry layer using geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Adding the Dot Plots with stat_dots()",
    "text": "Adding the Dot Plots with stat_dots()\nNext, we will add the third geometry layer using stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#finishing-touch",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Finishing touch",
    "text": "Finishing touch\nLastly, coord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, I will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#loading-the-r-packages",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "Loading the R packages",
    "text": "Loading the R packages\nIn this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#importing-data",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "Importing data",
    "text": "Importing data\nIn this section, COVID-19_DKI_Jakarta will be used. The code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "FunnelPlotR methods: The basic plot",
    "text": "FunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "FunnelPlotR methods: Makeover 1",
    "text": "FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\ndata_type argument is used to change from default “SR” to “PR” (i.e. proportions). + xrange and yrange are used to set the range of x-axis and y-axis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "FunnelPlotR methods: Makeover 2",
    "text": "FunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4d: Funnel Plots for Fair Comparisons",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "In this hands-on exercise, I will learn how to create animated data visualisation by using gganimate and plotly r packages. At the same time, you will also learn how to (i) reshape data by using tidyr package, and (ii) process, wrangle and transform data by using dplyr package.\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as frames.\n\n\n\n\n\nit’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#loading-the-r-packages",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Loading the R packages",
    "text": "Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#importing-the-data",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Importing the data",
    "text": "Importing the data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nThe code chunk below is to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "This hands-on exercise shows how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe code chunk below is to check, install and launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Importing data",
    "text": "Importing data\nIn this section, Exam_data.csv provided will be used. Using read_csv() of readr package, import Exam_data.csv into R.\nThe code chunk below read_csv() of readr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Tooltip effect with tooltip aesthetic",
    "text": "Tooltip effect with tooltip aesthetic\nThe code chunk below is separated to two parts: first part is creating the interactive ggplot2 geom to create the basic graph, then girafe() of ggiraph will be used to generate an svg object to be displayed on an html page. Hovering the mouse pointer on a data point will display the student’s ID.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Displaying multiple information on tooltip",
    "text": "Displaying multiple information on tooltip\nThe code chunk below shows how to create tooltips with multiple information on the elements.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#customising-tooltip-style",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Customising Tooltip style",
    "text": "Customising Tooltip style\nThe code chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by adding css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Displaying statistics on tooltip",
    "text": "Displaying statistics on tooltip\nThe code chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Hover effect with data_id aesthetic",
    "text": "Hover effect with data_id aesthetic\nThe code chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#styling-hover-effect",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Styling hover effect",
    "text": "Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Combining tooltip and hover effect",
    "text": "Combining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#click-effect-with-onclick",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Click effect with onclick",
    "text": "Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)   \n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Creating an interactive scatter plot: plot_ly() method",
    "text": "Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\nNotice that the only extra line you need to include in the code chunk is ggplotly()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Coordinated Multiple Views with plotly",
    "text": "Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Table: DT package",
    "text": "Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Linked brushing: crosstalk method",
    "text": "Linked brushing: crosstalk method\n\nThe plotThe code chunk\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#ggiraph",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "ggiraph",
    "text": "ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#plotly-for-r",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#plotly-for-r",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "plotly for R",
    "text": "plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "This hands on exercise will involve going through several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, I will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Importing data",
    "text": "Importing data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nThe plot using ggrepel() function is less cluttered with the overlapping annotations removed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthemes-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthemes-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Working with hrbthemes package",
    "text": "Working with hrbthemes package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe elements of hrbrthemes assist in the productivity of a production workflow.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating Composite Graphics: patchwork methods ",
    "text": "Creating Composite Graphics: patchwork methods \nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Combining three ggplot2 graphs",
    "text": "Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-inset",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-inset",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating figure with inset",
    "text": "Creating figure with inset\nOne or several plots or graphic elements can be placed freely on top or below another plot with inset_element() of patchwork.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#reference",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Reference",
    "text": "Reference\n\nPatchwork R package goes nerd viral\nggrepel\nggthemes\nhrbrthemes\nggplot tips: Arranging plots\nggplot2 Theme Elements Demonstration\nggplot2 Theme Elements Reference Sheet"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "",
    "text": "This hands on exercise will involve going through the ggplot packages of R and applying the principle of Layered Grammar of Graphics. By the end, I will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Installing and launching R packages",
    "text": "Installing and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer, if they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Importing the data",
    "text": "Importing the data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs.-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs.-ggplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "R Graphics vs. ggplot",
    "text": "R Graphics vs. ggplot\n\nggplot2R Graphics\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nFrom the comparisons above, it is relatively simple to use R Graphics due to the smaller code chunk, but ggplot2 is recommended because it provides more flexibility in customizing the graphs.\nAlso, as pointed out by Hadley Wickham:\n“The transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.”"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nBe warned that the y scale is not very useful and is in fact misleading. The code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\nThe code chunk below creates a simple histogram of MATHS field value using the default bin of 30.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\nThe code chunk below adds 3 arguments to modify the geometric object:\n\nbins: change the number of bins to 20,\nfill: shade the histogram with light blue color, and\ncolor: change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\nThe code chunk below adds a subgroup by using the fill argument in aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_density",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_density()",
    "text": "Geometric Objects: geom_density()\nThe code chunk below shows a smoothed version of the histogram by computing and plotting kernel density estimate, which is useful to show continuous data that comes from an underlying smooth distribution.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\nBelow, two kernel density lines are shown by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\nThe code chunk below shows the median, two hinges and two whiskers, and all “outlying” points individually.\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\nThe code chunk below plots a scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nThe code chunk below adds mean values using stat_summary.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\nThe code chunk below adds mean values using geom_() function.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)\n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot?",
    "text": "Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThe default method used is loess, but it can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\nThe scatterplot generated by the code chunk below is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics - ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Still Work in Progress! Stay tuned 😉"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "OECD education director Andreas Schleicher shared that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families”. Singapore’s Minister for Education shares the same belief, starting an “every school a good school” slogan. However, the population of Singapore disagrees that disparities don’t exist, especially between elite and neighborhood schools; students from higher socioeconomic status families and lower ones; and immigration and non-immigration families.\n\n\n\nBased on the dataset provided by the 2022 Programme for International Student Assessment (PISA), the aim of this exercise is to utilize appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "OECD education director Andreas Schleicher shared that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families”. Singapore’s Minister for Education shares the same belief, starting an “every school a good school” slogan. However, the population of Singapore disagrees that disparities don’t exist, especially between elite and neighborhood schools; students from higher socioeconomic status families and lower ones; and immigration and non-immigration families."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Based on the dataset provided by the 2022 Programme for International Student Assessment (PISA), the aim of this exercise is to utilize appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#installing-r-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Installing R packages",
    "text": "2.1 Installing R packages\nIn this take-home exercise, these R packages will be used:\n\ntidyverse\nhaven\ndplyr\nggrepel: provides geoms for ggplot2 to repel overlapping text labels\nggthemes: provides some extra themes, geoms, and scales for ‘ggplot2’\nhrbrthemes: provides typography-centric themes and theme components for ggplot2\npatchwork: package for preparing composite figure created using ggplot2\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven,\n               ggrepel, patchwork, \n               ggthemes, hrbrthemes, dplyr)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-pisa-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-pisa-data",
    "title": "Take-home Exercise 1",
    "section": "2.2 Importing PISA data",
    "text": "2.2 Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nTo retrieve only relevant data (Singapore-based), the filter argument is used as seen in the code chunk below.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nThen, the write_rds function will generate a new .rds file to be used for consequent EDAs.\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;-\n  read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nFew columns will be selected to be used for the EDA, these are:\n\nCNTSCHID (school_ID),\nST004D01T (gender: 1 being female, 2 being male),\nPVxMATH (math: Average of 10 plausible values of student’s mathematic score),\nPVxREAD (read: Average of 10 plausible values of student’s reading score),\nPVxSCIE (scie: Average of 10 plausible value of student’s science score),\nESCS (escs: Value of socioeconomic standing).\n\nAlso, school_ID and gender variables are categorical in nature. These variables are casted as factors using as.factor(). For gender, the values are renamed to “Female” and “Male” for better readibiity.\n\nstu_data &lt;- stu_qqq_SG %&gt;%\n  select(CNTSCHID, ST004D01T, ESCS) %&gt;%\n  rename(c(school_ID = \"CNTSCHID\",\n           gender = \"ST004D01T\",\n           escs = \"ESCS\"))\n\nstu_data$school_ID &lt;- as.factor(stu_data$school_ID)\nstu_data$gender &lt;- factor(stu_data$gender, levels = c(1, 2), labels = c(\"Female\", \"Male\"))\nstu_data$math &lt;- rowMeans(stu_qqq_SG[, c(\"PV1MATH\", \"PV2MATH\",\"PV3MATH\", \"PV4MATH\", \"PV5MATH\",\n                                         \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")],\n                          na.rm = TRUE)\nstu_data$read &lt;- rowMeans(stu_qqq_SG[, c(\"PV1READ\", \"PV2READ\",\"PV3READ\", \"PV4READ\", \"PV5READ\",\n                                         \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")],\n                          na.rm = TRUE)\nstu_data$scie &lt;- rowMeans(stu_qqq_SG[, c(\"PV1SCIE\", \"PV2SCIE\",\"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\",\n                                         \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")],\n                          na.rm = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preview",
    "title": "Take-home Exercise 1",
    "section": "2.4 Data Preview",
    "text": "2.4 Data Preview\n\nDataset structureDataset health\n\n\n\nstr(stu_data)\n\ntibble [6,606 × 6] (S3: tbl_df/tbl/data.frame)\n $ school_ID: Factor w/ 164 levels \"70200001\",\"70200002\",..: 52 134 112 4 151 43 49 107 12 61 ...\n $ gender   : Factor w/ 2 levels \"Female\",\"Male\": 1 2 2 2 1 1 2 2 1 2 ...\n $ escs     : num [1:6606] 0.1836 0.8261 -1.0357 -0.9606 0.0856 ...\n  ..- attr(*, \"label\")= chr \"Index of economic, social and cultural status\"\n $ math     : num [1:6606] 605 690 677 401 436 ...\n $ read     : num [1:6606] 667 628 583 361 476 ...\n $ scie     : num [1:6606] 640 672 660 344 479 ...\n\n\n\n\n\nstu_data[duplicated(stu_data),]\n\n# A tibble: 0 × 6\n# ℹ 6 variables: school_ID &lt;fct&gt;, gender &lt;fct&gt;, escs &lt;dbl&gt;, math &lt;dbl&gt;,\n#   read &lt;dbl&gt;, scie &lt;dbl&gt;\n\n\nNo duplicated rows are found.\n\nsum(is.na(stu_data))\n\n[1] 47\n\n\n47 NA responses are detected. Using the summary() function, the columns with NA responses can be ascertained.\n\nsummary(stu_data)\n\n    school_ID       gender          escs              math      \n 70200020:  60   Female:3248   Min.   :-3.5488   Min.   :262.6  \n 70200075:  60   Male  :3358   1st Qu.:-0.2327   1st Qu.:506.2  \n 70200159:  59                 Median : 0.4817   Median :582.4  \n 70200013:  58                 Mean   : 0.2904   Mean   :574.0  \n 70200045:  58                 3rd Qu.: 0.9036   3rd Qu.:648.4  \n 70200066:  58                 Max.   : 3.2780   Max.   :842.7  \n (Other) :6253                 NA's   :47                       \n      read            scie      \n Min.   :158.6   Min.   :242.0  \n 1st Qu.:477.4   1st Qu.:498.9  \n Median :553.6   Median :571.2  \n Mean   :542.5   Mean   :561.0  \n 3rd Qu.:616.1   3rd Qu.:629.3  \n Max.   :797.6   Max.   :801.9  \n                                \n\n\nAll 47 NA responses are found in the escs column. Let’s remove those from our subsequent analysis.\n\nstu_data &lt;- stu_data[!is.na(stu_data$escs), ]\n\nThe data is now ready to be visualized!"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-students-performance-in-each-subject",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-students-performance-in-each-subject",
    "title": "Take-home Exercise 1",
    "section": "3.1 Distribution of student’s performance in each subject",
    "text": "3.1 Distribution of student’s performance in each subject\nIn my analysis, I created three separate histogram plots to examine the distribution of student performance across three distinct subjects: mathematics, reading, and science.\n\n\nShow code\np1 &lt;- ggplot(data = stu_data,\n       aes(x = math)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n               fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(math)),\n    colour=\"salmon\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean(math)),\n    colour=\"cadetblue\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 800, \n    y = 900,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 800, \n    y = 800,\n    label = paste(\"Mean\"),\n    color = \"cadetblue\"\n  ) +\n  xlim(c(0, 900)) +\n  ylim(c(0, 1000)) +\n  labs(x = \"Score\", y = \"Count\", title = \"Mathematics\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\np2 &lt;- ggplot(data = stu_data,\n       aes(x = read)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n               fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(math)),\n    colour=\"salmon\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean(math)),\n    colour=\"cadetblue\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 800, \n    y = 900,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 800, \n    y = 850,\n    label = paste(\"Mean\"),\n    color = \"cadetblue\"\n  ) +\n  xlim(c(0, 900)) +\n  ylim(c(0, 1000)) +\n  labs(x = \"Score\", y = \"Count\", title = \"Reading\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\np3 &lt;- ggplot(data = stu_data,\n       aes(x = scie)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n               fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(math)),\n    colour=\"salmon\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  geom_vline(\n    aes(xintercept = mean(math)),\n    colour=\"cadetblue\", \n    linewidth = 0.5, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 800, \n    y = 900,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 800, \n    y = 800,\n    label = paste(\"Mean\"),\n    color = \"cadetblue\"\n  ) +\n  xlim(c(0, 900)) +\n  ylim(c(0, 1000)) +\n  labs(x = \"Score\", y = \"Count\", title = \"Science\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\n(p1 / p3 ) | p2\n\n\n\n\n\nEach histogram reveals a slight left skew in the distribution, indicating that a majority of students are achieving above-average scores in these subjects. This leftward skewness is particularly noteworthy as it suggests that fewer students are scoring at the lower end of the spectrum. The variance for each performance is also substantial, which could indicate a notable difference of disparity in performance in between students. This can be a result of several factors such as schools, genders, and socioeconomic status."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#students-academic-performance-in-relation-to-gender",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#students-academic-performance-in-relation-to-gender",
    "title": "Take-home Exercise 1",
    "section": "3.2 Student’s academic performance in relation to gender",
    "text": "3.2 Student’s academic performance in relation to gender\nTo start, three boxplots are generated from the code chunks below to show the performance of students of both genders in three different subjects: Mathematics, Reading, and Science.\n\nMathematicsReadingScience\n\n\n\ngendermath &lt;- ggplot(data = stu_data,\n       aes(x = gender,\n           y = math)) +\n  geom_boxplot(color=\"#20c3f5\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", y = \"Score\", title = \"Mathematics\", axis.title.y = element_blank()) +\n    theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\n\n\n\ngenderread &lt;- ggplot(data = stu_data,\n       aes(x = gender,\n           y = read)) +\n  geom_boxplot(color=\"#20c3f5\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"Gender\", title = \"Reading\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        axis.ticks.y = element_blank(),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\n\n\n\ngendersci &lt;- ggplot(data = stu_data,\n       aes(x = gender,\n           y = scie)) +\n  geom_boxplot(color=\"#20c3f5\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Science\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        axis.ticks.y = element_blank(),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\n\n\n\nIn order to show a side-by-side comparison of all 3 subjects’ boxplots, the patchwork package is utilized as shown in the code chunk below, where the three assigned boxplots can simply be added to each other.\n\n\nShow code\ngendermath + genderread + gendersci\n\n\n\n\n\nBased on the boxplots, some observations can be made:\n\nMale students slightly outperforms the female students in Mathematics and Science, while the female students scored higher in Reading compared to male students.\nThe means and medians for each subject are approximately the same across both genders.\nMany low-scoring outliers can be observed in Reading and Science subjects across both genders.\n\nUltimately, the data visualization shows that gender doesn’t have an impact in students’ performance."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-comparison-of-students-performance-between-schools",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-comparison-of-students-performance-between-schools",
    "title": "Take-home Exercise 1",
    "section": "3.3 The comparison of students’ performance between schools",
    "text": "3.3 The comparison of students’ performance between schools\nThe code chunk below creates a new data set to find the average grades of each subject for each school by using the group_by() function.\n\nstu_data_sch &lt;- stu_data %&gt;%\n  group_by(school_ID) %&gt;%\n  summarise(\n    average_math = mean(math),\n    average_read = mean(read),\n    average_scie = mean(scie)) %&gt;%\n  unique()\n\nThen, three histograms are created to show the distribution of average grades of schools for each subject as seen below.\n\n\nShow code\nschmath &lt;- ggplot(data = stu_data_sch,\n       aes(x = average_math)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(average_math)),\n    colour=\"salmon\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 35,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n  ylim(0, 40) +\n  xlim(300,900) +\n  labs(x = \"\", y = \"Count\", title = \"Mathematics\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\nschread &lt;- ggplot(data = stu_data_sch,\n       aes(x = average_read)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(average_read)),\n    colour=\"salmon\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 35,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n    ylim(0, 40) +\n    xlim(300,900) +\n  labs(x = \"Average Score\", y = \"\", title = \"Reading\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.y = element_blank())\n\nschsci &lt;- ggplot(data = stu_data_sch,\n       aes(x = average_scie)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(average_scie)),\n    colour=\"salmon\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 35,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n    ylim(0, 40) +\n    xlim(300,900) +\n  labs(x = \"\", y = \"\", title = \"Science\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.y = element_blank())\n\nschmath | schread | schsci\n\n\n\n\n\nTo show if the difference of average grades between schools exist, the absolute value between the average grade of each school subtracted by the average grade of the whole school combined can be extracted as shown in the code chunk below.\n\nstu_data_sch_diff &lt;- stu_data_sch %&gt;%\n  group_by(school_ID) %&gt;%\n  mutate(average_math_diff = abs(mean(stu_data$math)-average_math),\n         average_read_diff = abs(mean(stu_data$read)-average_read),\n         average_scie_diff = abs(mean(stu_data$scie)-average_scie)) %&gt;%\n  select(school_ID, average_math_diff, average_read_diff, average_scie_diff) %&gt;%\n  unique()\n\nThe differences for each subject can then be plotted as seen below.\n\n\nShow code\np1 &lt;- ggplot(data = stu_data_sch_diff,\n       aes(y = average_math_diff,\n           x = 0)) +\n  geom_violin() +\n  geom_boxplot(color  = \"#20c3f5\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 3) +\n  xlim(c(-0.5,0.5)) +\n  ylim(c(0,220)) +\n  scale_x_continuous(\"Mathematics\", breaks = NULL) +\n    labs(x = \"Mathematics\", y = \"Score difference\", title = \"\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank())\n\np2 &lt;- ggplot(data = stu_data_sch_diff,\n       aes(y = average_read_diff,\n           x = 0)) +\n  geom_violin() +\n  geom_boxplot(color = \"#20c3f5\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 3) +\n  xlim(c(-0.5,0.5)) +\n  ylim(c(0,220)) +\n  scale_x_continuous(\"Reading\", breaks = NULL) +\n    labs(x = \"\", y = \"\", title = \"\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        axis.ticks.y = element_blank(),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank())\n\np3 &lt;- ggplot(data = stu_data_sch_diff,\n       aes(y = average_scie_diff,\n           x = 0)) +\n  geom_violin() +\n  geom_boxplot(color = \"#20c3f5\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 3) +\n  xlim(c(-0.5,0.5)) +\n  ylim(c(0,220)) +\n  scale_x_continuous(\"Science\", breaks = NULL) +\n    labs(x = \"\", y = \"\", title = \"\") +\n  theme(axis.text.y = element_blank(),\n        axis.title.y = element_blank(),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        axis.ticks.y = element_blank(),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank())\n\np1 + p2 + p3\n\n\n\n\n\nBased on the boxplots, some observations can be made:\n\nAll three subjects show slight amount of disparity in average grades between schools, with the average difference value around 50. This proves that the performance between schools in each subject are not the same.\nSome outliers are detected in all three boxplots, showing that a few schools in Singapore either excels or underperforms in terms of the respective subjects.\nThe Q3 of the boxplots lie around the 70 point mark, meaning that almost 75% of schools in Singapore are placed between 0-70 point differences to the national average."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#students-performance-in-regards-to-their-households-socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#students-performance-in-regards-to-their-households-socioeconomic-status",
    "title": "Take-home Exercise 1",
    "section": "3.4 Student’s performance in regards to their household’s socioeconomic status",
    "text": "3.4 Student’s performance in regards to their household’s socioeconomic status\nTo see if there’s any correlation between a student’s performance and their socioeconomic value (ESCS), a scatterplot for each subject is generated to check for any linearity. Beforehand, let’s check for the summary of the ESCS data.\n\nsummary(stu_data$escs)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-3.5488 -0.2327  0.4817  0.2904  0.9036  3.2780 \n\n\nHere, no NA responses are found because they are already removed beforehand. Then, the distribution of ESCS between students is plotted below.\n\n\nShow code\nggplot(data = stu_data,\n       aes(x = escs)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#20c3f5\") +\n  geom_vline(\n    aes(xintercept = median(escs)),\n    colour=\"salmon\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 0, \n    y = 780,\n    label = paste(\"Median\"),\n    color = \"salmon\"\n  ) +\n  labs(x = \"ESCS\", y = \"Count\", title = \"ESCS Distribution\") +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\n\n\n\n\nThe histogram shows a left skewed distribution, which might indicate that students with normal to high ESCS value are more prevalent than those with low ESCS.\nNext, the scatterplots are generated below with the calculation of linearity.\n\n\nShow code\ncor_math &lt;- round(cor(stu_data$math, stu_data$escs),2)\ncor_read &lt;- round(cor(stu_data$read, stu_data$escs),2)\ncor_scie &lt;- round(cor(stu_data$scie, stu_data$escs),2)\n\np1 &lt;- ggplot(data = stu_data,\n       aes(y = math,\n           x = escs)) +\n  geom_point(size=0.1) +\n  labs(x = \"ESCS\", y = \"Math\", title = \"\") +\n  geom_smooth(method=lm, \n              size=0.5) +\n  annotate(\"text\", x=2.8, y=600, label=paste0(\"r = \", cor_math), color = 'red') +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank())\n\np2 &lt;- ggplot(data = stu_data,\n       aes(y = read,\n           x = escs)) +\n  geom_point(size=0.1) +\n  labs(x = \"ESCS\", y = \"Reading\", title = \"\") +\n  geom_smooth(method=lm, \n              size=0.5) +\n  annotate(\"text\", x=2.8, y=600, label=paste0(\"r = \", cor_read), color = 'red') +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank())\n\np3 &lt;- ggplot(data = stu_data,\n       aes(y = scie,\n           x = escs)) +\n  geom_point(size=0.1) +\n  labs(x = \"ESCS\", y = \"Science\", title = \"\") +\n  geom_smooth(method=lm, \n              size=0.5) +\n  annotate(\"text\", x=2.8, y=600, label=paste0(\"r = \", cor_scie), color = 'red') +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank())\n\np1 / p2 / p3\n\n\n\n\n\nIn the provided scatterplot graphs for each subject, a correlation of r = 0.44 is evident between a student’s score in the respective subjects and their Economic, Social, and Cultural Status (ESCS), which indicate weak to medium positive correlation."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2: DataViz Makeover",
    "section": "",
    "text": "In this take-home exercise, my goal is to apply what I have learned through the first two weeks of my Visual Analytics & Applications class such as different design practices and principles of DataViz and try to improve upon a fellow classmate’s data visualization in their Take-home Exercise 1 in both aesthetic and clarity."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-r-packages",
    "title": "Take-home Exercise 2: DataViz Makeover",
    "section": "2.1 Installing R packages",
    "text": "2.1 Installing R packages\nIn this take-home exercise, these R packages will be used:\n\ntidyverse\nhaven\npatchwork: package for preparing composite figure created using ggplot2\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven,\n               patchwork)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-pisa-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-pisa-data",
    "title": "Take-home Exercise 2: DataViz Makeover",
    "section": "2.2 Importing PISA data",
    "text": "2.2 Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nTo retrieve only relevant data (Singapore-based), the filter argument is used as seen in the code chunk below.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nThen, the write_rds function will generate a new .rds file to be used for consequent EDAs.\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;-\n  read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "title": "Take-home Exercise 2: DataViz Makeover",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nFew columns will be selected to be used for the EDA, these are:\n\nCNTSCHID (school_ID),\nST004D01T (gender: 1 being female, 2 being male),\nPVxMATH (math: Average of 10 plausible values of student’s mathematic score),\nPVxREAD (read: Average of 10 plausible values of student’s reading score),\nPVxSCIE (scie: Average of 10 plausible value of student’s science score),\nESCS (escs: Value of socioeconomic standing).\n\nAlso, school_ID and gender variables are categorical in nature. These variables are casted as factors using as.factor(). For gender, the values are renamed to “Female” and “Male” for better readibility.\n\nstu_data &lt;- stu_qqq_SG %&gt;%\n  select(CNTSCHID, ST004D01T, ESCS) %&gt;%\n  rename(c(school_ID = \"CNTSCHID\",\n           gender = \"ST004D01T\",\n           escs = \"ESCS\"))\n\nstu_data$school_ID &lt;- as.factor(stu_data$school_ID)\nstu_data$gender &lt;- factor(stu_data$gender, levels = c(1, 2), labels = c(\"Female\", \"Male\"))\nstu_data$math &lt;- rowMeans(stu_qqq_SG[, c(\"PV1MATH\", \"PV2MATH\",\"PV3MATH\", \"PV4MATH\", \"PV5MATH\",\n                                         \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")],\n                          na.rm = TRUE)\nstu_data$read &lt;- rowMeans(stu_qqq_SG[, c(\"PV1READ\", \"PV2READ\",\"PV3READ\", \"PV4READ\", \"PV5READ\",\n                                         \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")],\n                          na.rm = TRUE)\nstu_data$science &lt;- rowMeans(stu_qqq_SG[, c(\"PV1SCIE\", \"PV2SCIE\",\"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\",\n                                         \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")],\n                          na.rm = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-preview",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-preview",
    "title": "Take-home Exercise 2: DataViz Makeover",
    "section": "2.4 Data Preview",
    "text": "2.4 Data Preview\n\nDataset structureDataset health\n\n\n\nstr(stu_data)\n\ntibble [6,606 × 6] (S3: tbl_df/tbl/data.frame)\n $ school_ID: Factor w/ 164 levels \"70200001\",\"70200002\",..: 52 134 112 4 151 43 49 107 12 61 ...\n $ gender   : Factor w/ 2 levels \"Female\",\"Male\": 1 2 2 2 1 1 2 2 1 2 ...\n $ escs     : num [1:6606] 0.1836 0.8261 -1.0357 -0.9606 0.0856 ...\n  ..- attr(*, \"label\")= chr \"Index of economic, social and cultural status\"\n $ math     : num [1:6606] 605 690 677 401 436 ...\n $ read     : num [1:6606] 667 628 583 361 476 ...\n $ science  : num [1:6606] 640 672 660 344 479 ...\n\n\n\n\n\nstu_data[duplicated(stu_data),]\n\n# A tibble: 0 × 6\n# ℹ 6 variables: school_ID &lt;fct&gt;, gender &lt;fct&gt;, escs &lt;dbl&gt;, math &lt;dbl&gt;,\n#   read &lt;dbl&gt;, science &lt;dbl&gt;\n\n\nNo duplicated rows are found.\n\nsum(is.na(stu_data))\n\n[1] 47\n\n\n47 NA responses are detected. Using the summary() function, the columns with NA responses can be ascertained.\n\nsummary(stu_data)\n\n    school_ID       gender          escs              math      \n 70200020:  60   Female:3248   Min.   :-3.5488   Min.   :262.6  \n 70200075:  60   Male  :3358   1st Qu.:-0.2327   1st Qu.:506.2  \n 70200159:  59                 Median : 0.4817   Median :582.4  \n 70200013:  58                 Mean   : 0.2904   Mean   :574.0  \n 70200045:  58                 3rd Qu.: 0.9036   3rd Qu.:648.4  \n 70200066:  58                 Max.   : 3.2780   Max.   :842.7  \n (Other) :6253                 NA's   :47                       \n      read          science     \n Min.   :158.6   Min.   :242.0  \n 1st Qu.:477.4   1st Qu.:498.9  \n Median :553.6   Median :571.2  \n Mean   :542.5   Mean   :561.0  \n 3rd Qu.:616.1   3rd Qu.:629.3  \n Max.   :797.6   Max.   :801.9  \n                                \n\n\nAll 47 NA responses are found in the escs column. Let’s remove those from our subsequent analysis.\n\nstu_data &lt;- stu_data[!is.na(stu_data$escs), ]\n\nThe data is now ready to be utilized."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;-\n  read_rds(\"data/stu_qqq_SG.rds\")"
  }
]