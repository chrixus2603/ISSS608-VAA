---
title: "Take-home Exercise 2: DataViz Makeover"
author: "Chrissandro"
date: "25 January 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  warning: false
editor: visual
---

# 1. Overview

In this take-home exercise, my goal is to apply what I have learned through the first two weeks of my Visual Analytics & Applications class such as different design practices and principles of DataViz and try to improve upon a fellow classmate's data visualization in their Take-home Exercise 1 in both aesthetic and clarity.

# 2. Data Preparation

## 2.1 Installing R packages

In this take-home exercise, these R packages will be used:

-   [tidyverse](https://www.tidyverse.org/)

-   [haven](https://www.haven.tidyverse.org/)

-   patchwork: package for preparing composite figure created using ggplot2

The code chunk used is as follows:

```{r}
pacman::p_load(tidyverse, haven,
               patchwork)
```

## 2.2 Importing PISA data

The code chunk below uses [`read_sas()`](https://www.haven.tidyverse.org/reference/read_sas.html) of [haven](https://www.haven.tidyverse.org/) to import PISA data into R environment.

```{r}
#| eval: false
stu_qqq <- read_sas("data/cy08msp_stu_qqq.sas7bdat")
```

To retrieve only relevant data (Singapore-based), the *filter* argument is used as seen in the code chunk below.

```{r}
#| eval: false
stu_qqq_SG <- stu_qqq %>%
  filter(CNT == "SGP")
```

Then, the *write_rds* function will generate a new .rds file to be used for consequent EDAs.

```{r}
#| eval: false
write_rds(stu_qqq_SG,
          "data/stu_qqq_SG.rds")
```

```{r}
stu_qqq_SG <-
  read_rds("data/stu_qqq_SG.rds")
```

## 2.3 Data Wrangling

Few columns will be selected to be used for the EDA, these are:

-   **CNTSCHID** (school_ID),

-   **ST004D01T** (gender: 1 being female, 2 being male),

-   **PVxMATH** (math: Average of 10 plausible values of student's mathematic score),

-   **PVxREAD** (read: Average of 10 plausible values of student's reading score),

-   **PVxSCIE** (scie: Average of 10 plausible value of student's science score),

-   **ESCS** (escs: Value of socioeconomic standing).

Also, **school_ID** and **gender** variables are categorical in nature. These variables are casted as factors using *as.factor()*. For **gender**, the values are renamed to "Female" and "Male" for better readibility.

```{r}
stu_data <- stu_qqq_SG %>%
  select(CNTSCHID, ST004D01T, ESCS) %>%
  rename(c(school_ID = "CNTSCHID",
           gender = "ST004D01T",
           escs = "ESCS"))

stu_data$school_ID <- as.factor(stu_data$school_ID)
stu_data$gender <- factor(stu_data$gender, levels = c(1, 2), labels = c("Female", "Male"))
stu_data$math <- rowMeans(stu_qqq_SG[, c("PV1MATH", "PV2MATH","PV3MATH", "PV4MATH", "PV5MATH",
                                         "PV6MATH", "PV7MATH", "PV8MATH", "PV9MATH", "PV10MATH")],
                          na.rm = TRUE)
stu_data$read <- rowMeans(stu_qqq_SG[, c("PV1READ", "PV2READ","PV3READ", "PV4READ", "PV5READ",
                                         "PV6READ", "PV7READ", "PV8READ", "PV9READ", "PV10READ")],
                          na.rm = TRUE)
stu_data$science <- rowMeans(stu_qqq_SG[, c("PV1SCIE", "PV2SCIE","PV3SCIE", "PV4SCIE", "PV5SCIE",
                                         "PV6SCIE", "PV7SCIE", "PV8SCIE", "PV9SCIE", "PV10SCIE")],
                          na.rm = TRUE)
```

## 2.4 Data Preview

::: panel-tabset
## Dataset structure

```{r}
str(stu_data)
```

## Dataset health

```{r}
stu_data[duplicated(stu_data),]
```

No duplicated rows are found.

```{r}
sum(is.na(stu_data))
```

47 NA responses are detected. Using the *summary()* function, the columns with NA responses can be ascertained.

```{r}
summary(stu_data)
```

All 47 NA responses are found in the **escs** column. Let's remove those from our subsequent analysis.

```{r}
stu_data <- stu_data[!is.na(stu_data$escs), ]
```

The data is now ready to be utilized.
:::

# 3. DataViz Makeover

# 3.1 Distribution of students' performance

```{r}
#| code-fold: true
#| code-summary: Show code
p1 <- ggplot(data = stu_data,
       aes(y = math)) +
  geom_violin(aes(x=0)) +
  geom_boxplot()+
  stat_boxplot(geom = "errorbar", width = 0.05) +
  stat_summary(aes(x = 0),
               geom = "point",       
               fun.y = "mean",         
               colour = "red", 
               size = 1) +
  scale_y_continuous(NULL, limits = c(0,1000)) +
  scale_x_continuous("MATH GRADES", breaks = NULL) +
  theme_minimal()
p2 <- ggplot(data = stu_data,
       aes(y = science)) +
  geom_violin(aes(x=0)) +
  geom_boxplot()+
  stat_boxplot(geom = "errorbar", width = 0.05) +
  stat_summary(aes(x = 0),
               geom = "point",       
               fun.y = "mean",         
               colour = "red", 
               size = 1) +
  scale_y_continuous(NULL, limits = c(0,1000)) +
  scale_x_continuous("SCIENCE GRADES", breaks = NULL) +
  theme_minimal()
p3 <- ggplot(data = stu_data,
       aes(y = read)) +
  geom_violin(aes(x=0)) +
  geom_boxplot() +
  stat_boxplot(geom = "errorbar", width = 0.05) +
  stat_summary(aes(x = 0),
               geom = "point",       
               fun.y = "mean",         
               colour = "red", 
               size = 1) +
  scale_y_continuous(NULL, limits = c(0,1000)) +
  scale_x_continuous("READING GRADES", breaks = NULL) +
  theme_minimal()

p1|p2|p3
```

# 3.2 Visualizing student performance in relation to gender

:::panel-tabset
## Mathematics

```{r}
#| code-fold: true
#| code-summary: Show code
stats <- data.frame(gender = as.factor(c('Female','Male')),
                    mean = c(mean(stu_data$math[stu_data$gender == "Female"]),
                             mean(stu_data$math[stu_data$gender == "Male"])),
                    median = c(median(stu_data$math[stu_data$gender == "Female"]),
                               median(stu_data$math[stu_data$gender == "Male"])) )

ggplot(data = stu_data,
       aes(y = math)) +
  geom_histogram(bins = 10,
                 color = 'grey50',
                 fill = 'grey90') +
  facet_wrap(~ gender) +
  geom_hline(data = stats,
             mapping = aes(yintercept=mean),
             color = "red") +
  geom_hline(data = stats,
             mapping = aes(yintercept=median),
             color = "blue") +
  annotate(
    'text',
    x = Inf,
    y = Inf,
    hjust = 1,
    vjust = 2.1,
    label = paste("MEAN"),
    color = "red"
  ) +
  annotate(
    'text',
    x = Inf,
    y = Inf,
    hjust = 1,
    vjust = 1,
    label = paste("MEDIAN"),
    color = "blue"
  ) +
  theme_minimal()
```

## Science

```{r}
#| code-fold: true
#| code-summary: Show code
stats <- data.frame(gender = as.factor(c('Female','Male')),
                    mean = c(mean(stu_data$science[stu_data$gender == "Female"]),
                             mean(stu_data$science[stu_data$gender == "Male"])),
                    median = c(median(stu_data$science[stu_data$gender == "Female"]),
                               median(stu_data$science[stu_data$gender == "Male"])) )

ggplot(data = stu_data,
       aes(y = science)) +
  geom_histogram(bins = 10,
                 color = 'grey50',
                 fill = 'grey90') +
  facet_wrap(~ gender) +
  geom_hline(data = stats,
             mapping = aes(yintercept=mean),
             color = "red") +
  geom_hline(data = stats,
             mapping = aes(yintercept=median),
             color = "blue") +
  annotate(
    'text',
    x = Inf,
    y = Inf,
    hjust = 1,
    vjust = 2.1,
    label = paste("MEAN"),
    color = "red"
  ) +
  annotate(
    'text',
    x = Inf,
    y = Inf,
    hjust = 1,
    vjust = 1,
    label = paste("MEDIAN"),
    color = "blue"
  ) +
  theme_minimal()
```

## Reading

```{r}
#| code-fold: true
#| code-summary: Show code
stats <- data.frame(gender = as.factor(c('Female','Male')),
                    mean = c(mean(stu_data$read[stu_data$gender == "Female"]),
                             mean(stu_data$read[stu_data$gender == "Male"])),
                    median = c(median(stu_data$read[stu_data$gender == "Female"]),
                               median(stu_data$read[stu_data$gender == "Male"])) )

ggplot(data = stu_data,
       aes(y = read)) +
  geom_histogram(bins = 10,
                 color = 'grey50',
                 fill = 'grey90') +
  facet_wrap(~ gender) +
  geom_hline(data = stats,
             mapping = aes(yintercept=mean),
             color = "red") +
  geom_hline(data = stats,
             mapping = aes(yintercept=median),
             color = "blue") +
  annotate(
    'text',
    x = Inf,
    y = Inf,
    hjust = 1,
    vjust = 2.1,
    label = paste("MEAN"),
    color = "red"
  ) +
  annotate(
    'text',
    x = Inf,
    y = Inf,
    hjust = 1,
    vjust = 1,
    label = paste("MEDIAN"),
    color = "blue"
  ) +
  theme_minimal()
```
:::

# 3.3 Visualizing student performance in relation to their enrolled school

```{r}
average_math_SG <- mean(stu_data$math)
average_scie_SG <- mean(stu_data$science)
average_read_SG <- mean(stu_data$read)

stu_qqq_sch <- stu_data %>%
  group_by(school_ID) %>%
  mutate(average_math_diff = abs(mean(math)-average_math_SG),
         average_science_diff = abs(mean(science)-average_scie_SG),
         average_read_diff = abs(mean(read)-average_read_SG)) %>%
  select(school_ID, average_math_diff, average_science_diff, average_read_diff) %>%
  unique() 
```

```{r}
#| code-fold: true
#| code-summary: Show code
p1 <- ggplot(data = stu_qqq_sch,
       aes(y = average_math_diff)) +
  geom_boxplot(width = 0.1) +
  stat_boxplot(geom = "errorbar", width = 0.05) +
  stat_summary(aes(x = 0),
               geom = "point",       
               fun.y = "mean",         
               colour = "red", 
               size = 1) +
  scale_y_continuous(NULL, limits = c(0,220)) +
  scale_x_continuous("math avg grade diff", breaks = NULL) +
  theme_minimal()

p2 <- ggplot(data = stu_qqq_sch,
       aes(y = average_science_diff)) +
  geom_boxplot(width = 0.1) +
  stat_boxplot(geom = "errorbar", width = 0.05) +
  stat_summary(aes(x = 0),
               geom = "point",       
               fun.y ="mean",         
               colour ="red", 
               size=1) +
  scale_y_continuous(NULL, limits = c(0,220)) +
  scale_x_continuous("science avg grade diff", breaks = NULL) +
  theme_minimal()

p3 <- ggplot(data = stu_qqq_sch,
       aes(y = average_read_diff)) +
  geom_boxplot(width = 0.1) +
  stat_boxplot(geom = "errorbar", width = 0.05) +
  stat_summary(aes(x = 0),
               geom = "point",       
               fun.y ="mean",         
               colour ="red", 
               size=1) +
  scale_y_continuous(NULL, limits = c(0,220)) +
  scale_x_continuous("reading avg grade diff", breaks = NULL) +
  theme_minimal()

p1|p2|p3
```

# 3.4 Visualizing student performance in relation to socioeconomic status

```{r}
#| code-fold: true
#| code-summary: Show code
ggplot(data = stu_data,
       aes(y = escs)) +
  geom_violin(aes(x = 0))+
  geom_boxplot()+
  stat_summary(geom = 'point',
               fun = 'mean',
               aes(x = 0),
               color = 'red') +
  scale_y_continuous(NULL) +
  scale_x_continuous('Social Economic Standing', breaks = NULL) +
  theme_minimal()
```

```{r}
#| code-fold: true
#| code-summary: Show code
cor1 <- round(cor(stu_data$math, stu_data$escs),2)
cor2 <- round(cor(stu_data$science, stu_data$escs),2)
cor3 <- round(cor(stu_data$read, stu_data$escs),2)

p1 <- ggplot(data = stu_data,
             aes(y = math, x = escs)) +
        geom_point(size = 0.1)+
        geom_smooth(method = lm) + 
        annotate("text", x = 2.5, y = 600, label=paste0("r = ", cor1), color = 'blue') +
        theme_minimal()

p2 <- ggplot(data = stu_data,
             aes(y = science, x = escs)) +
        geom_point(size = 0.1)+
        geom_smooth(method = lm) +
        annotate("text", x = 2.5, y = 600, label=paste0("r = ", cor2), color = 'blue') + 
        theme_minimal()

p3 <- ggplot(data = stu_data,
             aes(y = read, x = escs)) +
        geom_point(size = 0.1)+
        geom_smooth(method = lm) + 
        annotate("text", x = 2.5, y = 600, label=paste0("r = ", cor3), color = 'blue') +
        theme_minimal()

p1/p2/p3
```

